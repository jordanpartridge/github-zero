{
  "permissions": {
    "allow": [
      "Bash(gh pr view:*)",
      "Bash(gh api:*)",
      "Bash(git push:*)",
      "Bash(composer global require:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(git tag:*)",
      "Bash(gh release create:*)",
      "Bash(composer global config:*)",
      "Bash(ls:*)",
      "Bash(mkdir:*)",
      "Bash(composer require:*)",
      "Bash(./vendor/bin/github:*)",
      "Bash(composer:*)",
      "Bash(github repos:*)",
      "Bash(gh repo view:*)",
      "Bash(gh pr list:*)",
      "Bash(git -C /Users/jordanpartridge/packages/jordanpartridge/github-client log --oneline origin/feature/add-issues-support ^origin/master)",
      "Bash(gh pr create:*)",
      "Bash(git -C /Users/jordanpartridge/packages/jordanpartridge/github-client stash push -m \"Our connector integration work for issues\")",
      "Bash(git -C /Users/jordanpartridge/packages/jordanpartridge/github-client checkout feature/add-issues-support)",
      "Bash(git -C /Users/jordanpartridge/packages/jordanpartridge/github-client stash pop)",
      "Bash(git -C /Users/jordanpartridge/packages/jordanpartridge/github-client rm -rf src/Requests/Issues/ src/Resources/IssueResource.php)",
      "Bash(git -C /Users/jordanpartridge/packages/jordanpartridge/github-client status)",
      "Bash(git -C /Users/jordanpartridge/packages/jordanpartridge/github-client add .)",
      "Bash(git -C /Users/jordanpartridge/packages/jordanpartridge/github-client commit -m \"Add connector integration for Issues and PullRequests\n\n- Add issues() method to Github class and GithubConnector  \n- Add pullRequests() method for consistency\n- Update GithubConnectorInterface with new methods\n- Enables full Issues and PR support in github-client\")",
      "Bash(git -C /Users/jordanpartridge/packages/jordanpartridge/github-client push origin feature/add-issues-support)",
      "Bash(gh pr merge:*)",
      "Bash(git -C /Users/jordanpartridge/packages/jordanpartridge/github-client fetch origin)",
      "Bash(git -C /Users/jordanpartridge/packages/jordanpartridge/github-client log --oneline origin/master -5)",
      "Bash(git -C /Users/jordanpartridge/packages/jordanpartridge/github-client rebase origin/master)",
      "Bash(git -C /Users/jordanpartridge/packages/jordanpartridge/github-client rebase --continue)",
      "Bash(git -C /Users/jordanpartridge/packages/jordanpartridge/github-client push origin feature/add-issues-support --force-with-lease)",
      "Bash(git -C /Users/jordanpartridge/packages/jordanpartridge/github-client checkout master)",
      "Bash(git pull:*)",
      "Bash(git -C /Users/jordanpartridge/packages/jordanpartridge/github-client log --oneline -3)",
      "Bash(git -C /Users/jordanpartridge/packages/jordanpartridge/github-client fetch)",
      "Bash(git -C /Users/jordanpartridge/packages/jordanpartridge/github-client reset --hard origin/master)",
      "Bash(git -C /Users/jordanpartridge/packages/jordanpartridge/github-client commit -m \"fix: make IssueResource readonly to match BaseResource\")",
      "Bash(git -C /Users/jordanpartridge/packages/jordanpartridge/github-client push origin master)",
      "Bash(gh pr comment:*)",
      "Bash(find:*)",
      "WebFetch(domain:docs.github.com)",
      "Bash(./bin/github issues:*)",
      "Bash(gh issue list:*)",
      "Bash(gh issue view:*)",
      "Bash(gh pr diff:*)",
      "Bash(rg:*)",
      "Bash(gh issue close:*)",
      "Bash(gh pr close:*)",
      "Bash(./bin/github repos:*)",
      "Bash(./vendor/bin/pint:*)",
      "Bash(./vendor/bin/phpstan:*)",
      "Bash(GITHUB_TOKEN=$GITHUB_TOKEN ./bin/github repos --limit=2 --format=json)",
      "Bash(./bin/github clone:*)",
      "Bash(git reset:*)",
      "Bash(gh pr edit:*)",
      "Bash(gh pr checks:*)",
      "Bash(gh release delete:*)",
      "Bash(GITHUB_TOKEN=\"$GITHUB_TOKEN\" ./bin/github repos --limit=2 --format=json)"
    ],
    "deny": []
  }
}